Terminals unused in grammar

   FAIL


Rules useless in parser due to conflicts

   21 body: functionform

   25 orlist: functionform ',' orlist
   26       | functionform ',' andlist

   27 andlist: %empty
   28        | functionform ';' andlist
   29        | functionform ';' orlist

   33 arguments: argument
   34          | argument ',' arguments


State 16 conflicts: 1 reduce/reduce
State 25 conflicts: 1 reduce/reduce
State 31 conflicts: 5 reduce/reduce
State 39 conflicts: 1 shift/reduce, 1 reduce/reduce
State 45 conflicts: 3 shift/reduce, 5 reduce/reduce
State 46 conflicts: 3 shift/reduce, 5 reduce/reduce
State 52 conflicts: 3 shift/reduce, 4 reduce/reduce
State 53 conflicts: 1 reduce/reduce
State 63 conflicts: 5 reduce/reduce
State 64 conflicts: 5 reduce/reduce
State 66 conflicts: 5 reduce/reduce
State 67 conflicts: 5 reduce/reduce
State 72 conflicts: 4 reduce/reduce


Grammar

    0 $accept: input $end

    1 input: clauselist

    2 clauselist: %empty
    3           | clause clauselist

    4 clause: fact
    5       | rule

    6 fact: functionform '.'

    7 functionform: TATOM '(' arguments ')'
    8             | NOT TATOM '(' arguments ')'
    9             | '~' TATOM '(' arguments ')'

   10 arguments: argument
   11          | argument ',' arguments

   12 argument: functionform
   13         | TATOM
   14         | TINT
   15         | TFLOAT
   16         | VAR

   17 rule: functionform IS body '.'

   18 body: functionform
   19     | functionform ',' body
   20     | functionform ';' body
   21     | functionform
   22     | orlist
   23     | andlist

   24 orlist: %empty
   25       | functionform ',' orlist
   26       | functionform ',' andlist

   27 andlist: %empty
   28        | functionform ';' andlist
   29        | functionform ';' orlist

   30 fact: atomargs '.'

   31 atomargs: TATOM '(' arguments ')'

   32 rule: TATOM '(' arguments ')' IS body

   33 arguments: argument
   34          | argument ',' arguments

   35 body: terms '.'

   36 terms: term
   37      | term ',' terms
   38      | term ';' terms

   39 term: TATOM '(' term ')'
   40     | NOT '(' term ')'
   41     | atomargs
   42     | '!'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 42
'(' (40) 7 8 9 31 32 39 40
')' (41) 7 8 9 31 32 39 40
',' (44) 11 19 25 26 34 37
'.' (46) 6 17 30 35
';' (59) 20 28 29 38
'~' (126) 9
error (256)
IS (258) 17 32
TATOM (259) 7 8 9 13 31 32 39
TFLOAT (260) 15
TINT (261) 14
NOT (262) 8 40
VAR (263) 16
FAIL (264)


Nonterminals, with rules where they appear

$accept (17)
    on left: 0
input (18)
    on left: 1, on right: 0
clauselist (19)
    on left: 2 3, on right: 1 3
clause (20)
    on left: 4 5, on right: 3
fact (21)
    on left: 6 30, on right: 4
functionform (22)
    on left: 7 8 9, on right: 6 12 17 18 19 20 21 25 26 28 29
arguments (23)
    on left: 10 11 33 34, on right: 7 8 9 11 31 32 34
argument (24)
    on left: 12 13 14 15 16, on right: 10 11 33 34
rule (25)
    on left: 17 32, on right: 5
body (26)
    on left: 18 19 20 21 22 23 35, on right: 17 19 20 32
orlist (27)
    on left: 24 25 26, on right: 22 25 29
andlist (28)
    on left: 27 28 29, on right: 23 26 28
atomargs (29)
    on left: 31, on right: 30 41
terms (30)
    on left: 36 37 38, on right: 35 37 38
term (31)
    on left: 39 40 41 42, on right: 36 37 38 39 40


State 0

    0 $accept: . input $end

    TATOM  shift, and go to state 1
    NOT    shift, and go to state 2
    '~'    shift, and go to state 3

    $default  reduce using rule 2 (clauselist)

    input         go to state 4
    clauselist    go to state 5
    clause        go to state 6
    fact          go to state 7
    functionform  go to state 8
    rule          go to state 9
    atomargs      go to state 10


State 1

    7 functionform: TATOM . '(' arguments ')'
   31 atomargs: TATOM . '(' arguments ')'
   32 rule: TATOM . '(' arguments ')' IS body

    '('  shift, and go to state 11


State 2

    8 functionform: NOT . TATOM '(' arguments ')'

    TATOM  shift, and go to state 12


State 3

    9 functionform: '~' . TATOM '(' arguments ')'

    TATOM  shift, and go to state 13


State 4

    0 $accept: input . $end

    $end  shift, and go to state 14


State 5

    1 input: clauselist .

    $default  reduce using rule 1 (input)


State 6

    3 clauselist: clause . clauselist

    TATOM  shift, and go to state 1
    NOT    shift, and go to state 2
    '~'    shift, and go to state 3

    $default  reduce using rule 2 (clauselist)

    clauselist    go to state 15
    clause        go to state 6
    fact          go to state 7
    functionform  go to state 8
    rule          go to state 9
    atomargs      go to state 10


State 7

    4 clause: fact .

    $default  reduce using rule 4 (clause)


State 8

    6 fact: functionform . '.'
   17 rule: functionform . IS body '.'

    IS   shift, and go to state 16
    '.'  shift, and go to state 17


State 9

    5 clause: rule .

    $default  reduce using rule 5 (clause)


State 10

   30 fact: atomargs . '.'

    '.'  shift, and go to state 18


State 11

    7 functionform: TATOM '(' . arguments ')'
   31 atomargs: TATOM '(' . arguments ')'
   32 rule: TATOM '(' . arguments ')' IS body

    TATOM   shift, and go to state 19
    TFLOAT  shift, and go to state 20
    TINT    shift, and go to state 21
    NOT     shift, and go to state 2
    VAR     shift, and go to state 22
    '~'     shift, and go to state 3

    functionform  go to state 23
    arguments     go to state 24
    argument      go to state 25


State 12

    8 functionform: NOT TATOM . '(' arguments ')'

    '('  shift, and go to state 26


State 13

    9 functionform: '~' TATOM . '(' arguments ')'

    '('  shift, and go to state 27


State 14

    0 $accept: input $end .

    $default  accept


State 15

    3 clauselist: clause clauselist .

    $default  reduce using rule 3 (clauselist)


State 16

   17 rule: functionform IS . body '.'

    TATOM  shift, and go to state 28
    NOT    shift, and go to state 29
    '~'    shift, and go to state 3
    '!'    shift, and go to state 30

    '.'       reduce using rule 24 (orlist)
    '.'       [reduce using rule 27 (andlist)]
    $default  reduce using rule 24 (orlist)

    functionform  go to state 31
    body          go to state 32
    orlist        go to state 33
    andlist       go to state 34
    atomargs      go to state 35
    terms         go to state 36
    term          go to state 37


State 17

    6 fact: functionform '.' .

    $default  reduce using rule 6 (fact)


State 18

   30 fact: atomargs '.' .

    $default  reduce using rule 30 (fact)


State 19

    7 functionform: TATOM . '(' arguments ')'
   13 argument: TATOM .

    '('  shift, and go to state 38

    $default  reduce using rule 13 (argument)


State 20

   15 argument: TFLOAT .

    $default  reduce using rule 15 (argument)


State 21

   14 argument: TINT .

    $default  reduce using rule 14 (argument)


State 22

   16 argument: VAR .

    $default  reduce using rule 16 (argument)


State 23

   12 argument: functionform .

    $default  reduce using rule 12 (argument)


State 24

    7 functionform: TATOM '(' arguments . ')'
   31 atomargs: TATOM '(' arguments . ')'
   32 rule: TATOM '(' arguments . ')' IS body

    ')'  shift, and go to state 39


State 25

   10 arguments: argument .
   11          | argument . ',' arguments
   33          | argument .
   34          | argument . ',' arguments

    ','  shift, and go to state 40

    ')'       reduce using rule 10 (arguments)
    ')'       [reduce using rule 33 (arguments)]
    $default  reduce using rule 10 (arguments)


State 26

    8 functionform: NOT TATOM '(' . arguments ')'

    TATOM   shift, and go to state 19
    TFLOAT  shift, and go to state 20
    TINT    shift, and go to state 21
    NOT     shift, and go to state 2
    VAR     shift, and go to state 22
    '~'     shift, and go to state 3

    functionform  go to state 23
    arguments     go to state 41
    argument      go to state 25


State 27

    9 functionform: '~' TATOM '(' . arguments ')'

    TATOM   shift, and go to state 19
    TFLOAT  shift, and go to state 20
    TINT    shift, and go to state 21
    NOT     shift, and go to state 2
    VAR     shift, and go to state 22
    '~'     shift, and go to state 3

    functionform  go to state 23
    arguments     go to state 42
    argument      go to state 25


State 28

    7 functionform: TATOM . '(' arguments ')'
   31 atomargs: TATOM . '(' arguments ')'
   39 term: TATOM . '(' term ')'

    '('  shift, and go to state 43


State 29

    8 functionform: NOT . TATOM '(' arguments ')'
   40 term: NOT . '(' term ')'

    TATOM  shift, and go to state 12
    '('    shift, and go to state 44


State 30

   42 term: '!' .

    $default  reduce using rule 42 (term)


State 31

   18 body: functionform .
   19     | functionform . ',' body
   20     | functionform . ';' body
   21     | functionform .
   25 orlist: functionform . ',' orlist
   26       | functionform . ',' andlist
   28 andlist: functionform . ';' andlist
   29        | functionform . ';' orlist

    ','  shift, and go to state 45
    ';'  shift, and go to state 46

    $end      reduce using rule 18 (body)
    $end      [reduce using rule 21 (body)]
    TATOM     reduce using rule 18 (body)
    TATOM     [reduce using rule 21 (body)]
    NOT       reduce using rule 18 (body)
    NOT       [reduce using rule 21 (body)]
    '.'       reduce using rule 18 (body)
    '.'       [reduce using rule 21 (body)]
    '~'       reduce using rule 18 (body)
    '~'       [reduce using rule 21 (body)]
    $default  reduce using rule 18 (body)


State 32

   17 rule: functionform IS body . '.'

    '.'  shift, and go to state 47


State 33

   22 body: orlist .

    $default  reduce using rule 22 (body)


State 34

   23 body: andlist .

    $default  reduce using rule 23 (body)


State 35

   41 term: atomargs .

    $default  reduce using rule 41 (term)


State 36

   35 body: terms . '.'

    '.'  shift, and go to state 48


State 37

   36 terms: term .
   37      | term . ',' terms
   38      | term . ';' terms

    ','  shift, and go to state 49
    ';'  shift, and go to state 50

    $default  reduce using rule 36 (terms)


State 38

    7 functionform: TATOM '(' . arguments ')'

    TATOM   shift, and go to state 19
    TFLOAT  shift, and go to state 20
    TINT    shift, and go to state 21
    NOT     shift, and go to state 2
    VAR     shift, and go to state 22
    '~'     shift, and go to state 3

    functionform  go to state 23
    arguments     go to state 51
    argument      go to state 25


State 39

    7 functionform: TATOM '(' arguments ')' .
   31 atomargs: TATOM '(' arguments ')' .
   32 rule: TATOM '(' arguments ')' . IS body

    IS  shift, and go to state 52

    IS        [reduce using rule 7 (functionform)]
    '.'       reduce using rule 7 (functionform)
    '.'       [reduce using rule 31 (atomargs)]
    $default  reduce using rule 7 (functionform)


State 40

   11 arguments: argument ',' . arguments
   34          | argument ',' . arguments

    TATOM   shift, and go to state 19
    TFLOAT  shift, and go to state 20
    TINT    shift, and go to state 21
    NOT     shift, and go to state 2
    VAR     shift, and go to state 22
    '~'     shift, and go to state 3

    functionform  go to state 23
    arguments     go to state 53
    argument      go to state 25


State 41

    8 functionform: NOT TATOM '(' arguments . ')'

    ')'  shift, and go to state 54


State 42

    9 functionform: '~' TATOM '(' arguments . ')'

    ')'  shift, and go to state 55


State 43

    7 functionform: TATOM '(' . arguments ')'
   31 atomargs: TATOM '(' . arguments ')'
   39 term: TATOM '(' . term ')'

    TATOM   shift, and go to state 56
    TFLOAT  shift, and go to state 20
    TINT    shift, and go to state 21
    NOT     shift, and go to state 29
    VAR     shift, and go to state 22
    '~'     shift, and go to state 3
    '!'     shift, and go to state 30

    functionform  go to state 23
    arguments     go to state 57
    argument      go to state 25
    atomargs      go to state 35
    term          go to state 58


State 44

   40 term: NOT '(' . term ')'

    TATOM  shift, and go to state 59
    NOT    shift, and go to state 60
    '!'    shift, and go to state 30

    atomargs  go to state 35
    term      go to state 61


State 45

   19 body: functionform ',' . body
   25 orlist: functionform ',' . orlist
   26       | functionform ',' . andlist

    TATOM  shift, and go to state 28
    NOT    shift, and go to state 29
    '~'    shift, and go to state 3
    '!'    shift, and go to state 30

    $end      reduce using rule 24 (orlist)
    $end      [reduce using rule 27 (andlist)]
    TATOM     [reduce using rule 24 (orlist)]
    TATOM     [reduce using rule 27 (andlist)]
    NOT       [reduce using rule 24 (orlist)]
    NOT       [reduce using rule 27 (andlist)]
    '.'       reduce using rule 24 (orlist)
    '.'       [reduce using rule 27 (andlist)]
    '~'       [reduce using rule 24 (orlist)]
    '~'       [reduce using rule 27 (andlist)]
    $default  reduce using rule 24 (orlist)

    functionform  go to state 31
    body          go to state 62
    orlist        go to state 63
    andlist       go to state 64
    atomargs      go to state 35
    terms         go to state 36
    term          go to state 37


State 46

   20 body: functionform ';' . body
   28 andlist: functionform ';' . andlist
   29        | functionform ';' . orlist

    TATOM  shift, and go to state 28
    NOT    shift, and go to state 29
    '~'    shift, and go to state 3
    '!'    shift, and go to state 30

    $end      reduce using rule 24 (orlist)
    $end      [reduce using rule 27 (andlist)]
    TATOM     [reduce using rule 24 (orlist)]
    TATOM     [reduce using rule 27 (andlist)]
    NOT       [reduce using rule 24 (orlist)]
    NOT       [reduce using rule 27 (andlist)]
    '.'       reduce using rule 24 (orlist)
    '.'       [reduce using rule 27 (andlist)]
    '~'       [reduce using rule 24 (orlist)]
    '~'       [reduce using rule 27 (andlist)]
    $default  reduce using rule 24 (orlist)

    functionform  go to state 31
    body          go to state 65
    orlist        go to state 66
    andlist       go to state 67
    atomargs      go to state 35
    terms         go to state 36
    term          go to state 37


State 47

   17 rule: functionform IS body '.' .

    $default  reduce using rule 17 (rule)


State 48

   35 body: terms '.' .

    $default  reduce using rule 35 (body)


State 49

   37 terms: term ',' . terms

    TATOM  shift, and go to state 59
    NOT    shift, and go to state 60
    '!'    shift, and go to state 30

    atomargs  go to state 35
    terms     go to state 68
    term      go to state 37


State 50

   38 terms: term ';' . terms

    TATOM  shift, and go to state 59
    NOT    shift, and go to state 60
    '!'    shift, and go to state 30

    atomargs  go to state 35
    terms     go to state 69
    term      go to state 37


State 51

    7 functionform: TATOM '(' arguments . ')'

    ')'  shift, and go to state 70


State 52

   32 rule: TATOM '(' arguments ')' IS . body

    TATOM  shift, and go to state 28
    NOT    shift, and go to state 29
    '~'    shift, and go to state 3
    '!'    shift, and go to state 30

    $end      reduce using rule 24 (orlist)
    $end      [reduce using rule 27 (andlist)]
    TATOM     [reduce using rule 24 (orlist)]
    TATOM     [reduce using rule 27 (andlist)]
    NOT       [reduce using rule 24 (orlist)]
    NOT       [reduce using rule 27 (andlist)]
    '~'       [reduce using rule 24 (orlist)]
    '~'       [reduce using rule 27 (andlist)]
    $default  reduce using rule 24 (orlist)

    functionform  go to state 31
    body          go to state 71
    orlist        go to state 33
    andlist       go to state 34
    atomargs      go to state 35
    terms         go to state 36
    term          go to state 37


State 53

   11 arguments: argument ',' arguments .
   34          | argument ',' arguments .

    ')'       reduce using rule 11 (arguments)
    ')'       [reduce using rule 34 (arguments)]
    $default  reduce using rule 11 (arguments)


State 54

    8 functionform: NOT TATOM '(' arguments ')' .

    $default  reduce using rule 8 (functionform)


State 55

    9 functionform: '~' TATOM '(' arguments ')' .

    $default  reduce using rule 9 (functionform)


State 56

    7 functionform: TATOM . '(' arguments ')'
   13 argument: TATOM .
   31 atomargs: TATOM . '(' arguments ')'
   39 term: TATOM . '(' term ')'

    '('  shift, and go to state 43

    $default  reduce using rule 13 (argument)


State 57

    7 functionform: TATOM '(' arguments . ')'
   31 atomargs: TATOM '(' arguments . ')'

    ')'  shift, and go to state 72


State 58

   39 term: TATOM '(' term . ')'

    ')'  shift, and go to state 73


State 59

   31 atomargs: TATOM . '(' arguments ')'
   39 term: TATOM . '(' term ')'

    '('  shift, and go to state 74


State 60

   40 term: NOT . '(' term ')'

    '('  shift, and go to state 44


State 61

   40 term: NOT '(' term . ')'

    ')'  shift, and go to state 75


State 62

   19 body: functionform ',' body .

    $default  reduce using rule 19 (body)


State 63

   22 body: orlist .
   25 orlist: functionform ',' orlist .

    $end      reduce using rule 22 (body)
    $end      [reduce using rule 25 (orlist)]
    TATOM     reduce using rule 22 (body)
    TATOM     [reduce using rule 25 (orlist)]
    NOT       reduce using rule 22 (body)
    NOT       [reduce using rule 25 (orlist)]
    '.'       reduce using rule 22 (body)
    '.'       [reduce using rule 25 (orlist)]
    '~'       reduce using rule 22 (body)
    '~'       [reduce using rule 25 (orlist)]
    $default  reduce using rule 22 (body)


State 64

   23 body: andlist .
   26 orlist: functionform ',' andlist .

    $end      reduce using rule 23 (body)
    $end      [reduce using rule 26 (orlist)]
    TATOM     reduce using rule 23 (body)
    TATOM     [reduce using rule 26 (orlist)]
    NOT       reduce using rule 23 (body)
    NOT       [reduce using rule 26 (orlist)]
    '.'       reduce using rule 23 (body)
    '.'       [reduce using rule 26 (orlist)]
    '~'       reduce using rule 23 (body)
    '~'       [reduce using rule 26 (orlist)]
    $default  reduce using rule 23 (body)


State 65

   20 body: functionform ';' body .

    $default  reduce using rule 20 (body)


State 66

   22 body: orlist .
   29 andlist: functionform ';' orlist .

    $end      reduce using rule 22 (body)
    $end      [reduce using rule 29 (andlist)]
    TATOM     reduce using rule 22 (body)
    TATOM     [reduce using rule 29 (andlist)]
    NOT       reduce using rule 22 (body)
    NOT       [reduce using rule 29 (andlist)]
    '.'       reduce using rule 22 (body)
    '.'       [reduce using rule 29 (andlist)]
    '~'       reduce using rule 22 (body)
    '~'       [reduce using rule 29 (andlist)]
    $default  reduce using rule 22 (body)


State 67

   23 body: andlist .
   28 andlist: functionform ';' andlist .

    $end      reduce using rule 23 (body)
    $end      [reduce using rule 28 (andlist)]
    TATOM     reduce using rule 23 (body)
    TATOM     [reduce using rule 28 (andlist)]
    NOT       reduce using rule 23 (body)
    NOT       [reduce using rule 28 (andlist)]
    '.'       reduce using rule 23 (body)
    '.'       [reduce using rule 28 (andlist)]
    '~'       reduce using rule 23 (body)
    '~'       [reduce using rule 28 (andlist)]
    $default  reduce using rule 23 (body)


State 68

   37 terms: term ',' terms .

    $default  reduce using rule 37 (terms)


State 69

   38 terms: term ';' terms .

    $default  reduce using rule 38 (terms)


State 70

    7 functionform: TATOM '(' arguments ')' .

    $default  reduce using rule 7 (functionform)


State 71

   32 rule: TATOM '(' arguments ')' IS body .

    $default  reduce using rule 32 (rule)


State 72

    7 functionform: TATOM '(' arguments ')' .
   31 atomargs: TATOM '(' arguments ')' .

    '.'       reduce using rule 7 (functionform)
    '.'       [reduce using rule 31 (atomargs)]
    ')'       reduce using rule 7 (functionform)
    ')'       [reduce using rule 31 (atomargs)]
    ','       reduce using rule 7 (functionform)
    ','       [reduce using rule 31 (atomargs)]
    ';'       reduce using rule 7 (functionform)
    ';'       [reduce using rule 31 (atomargs)]
    $default  reduce using rule 7 (functionform)


State 73

   39 term: TATOM '(' term ')' .

    $default  reduce using rule 39 (term)


State 74

   31 atomargs: TATOM '(' . arguments ')'
   39 term: TATOM '(' . term ')'

    TATOM   shift, and go to state 56
    TFLOAT  shift, and go to state 20
    TINT    shift, and go to state 21
    NOT     shift, and go to state 29
    VAR     shift, and go to state 22
    '~'     shift, and go to state 3
    '!'     shift, and go to state 30

    functionform  go to state 23
    arguments     go to state 76
    argument      go to state 25
    atomargs      go to state 35
    term          go to state 58


State 75

   40 term: NOT '(' term ')' .

    $default  reduce using rule 40 (term)


State 76

   31 atomargs: TATOM '(' arguments . ')'

    ')'  shift, and go to state 77


State 77

   31 atomargs: TATOM '(' arguments ')' .

    $default  reduce using rule 31 (atomargs)
